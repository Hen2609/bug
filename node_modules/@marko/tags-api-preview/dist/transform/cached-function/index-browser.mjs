import {
  require_patch_lifecycle
} from "../../chunk-5WRUZCBU.mjs";
import {
  __toESM
} from "../../chunk-XYON6ZHC.mjs";

// src/transform/cached-function/index-browser.ts
var import_patch_lifecycle = __toESM(require_patch_lifecycle());
var metaKey = Symbol();
var indexKey = Symbol();
var curComponent;
var isCached = false;
var lifecycleMethods = {
  onMount: resetIndex,
  onUpdate: resetIndex
};
function cached(component, cur) {
  const meta = component[metaKey];
  const index = component[indexKey];
  curComponent = component;
  if (meta) {
    if (index === void 0) {
      meta.push(cur);
      return false;
    }
    const prev = meta[index];
    component[indexKey] += 2;
    for (let i = prev.length; i--; ) {
      if (prev[i] !== cur[i]) {
        meta[index] = cur;
        return false;
      }
    }
    return isCached = true;
  }
  (0, import_patch_lifecycle.default)(component, lifecycleMethods);
  component[metaKey] = [cur];
  return false;
}
function cache(val) {
  const meta = curComponent[metaKey];
  const index = curComponent[indexKey];
  curComponent = void 0;
  if (isCached) {
    isCached = false;
    return index === void 0 ? meta[meta.length - 1] : meta[index - 1];
  }
  if (index == void 0) {
    meta.push(val);
  } else {
    meta[index - 1] = val;
  }
  return val;
}
function resetIndex() {
  this[indexKey] = 0;
}
export {
  cache,
  cached
};
