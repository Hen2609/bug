static var CONTEXT_KEY = "__subtree_context__";
static function getProvider(out, provider) {
  return out[CONTEXT_KEY] && out[CONTEXT_KEY][provider.___providerId];
}

class {
  onCreate() {
    this.sync = this.sync.bind(this);
  }
  onInput(input, out) {
    var from = input.default;

    if (!from || !from.render) {
      throw new Error(
        "Invalid component constructor provided as <get> 'default' attribute. Got: " +
          from
      );
    }

    var prevProvider = this.provider;
    this.provider = getProvider(out, from);

    if (prevProvider && prevProvider !== this.provider) {
      this.sub.removeAllListeners();
    }

    if (this.provider) {
      if (typeof window === "object") {
        this.sub = this.subscribeTo(this.provider).on("___changed", this.sync);
      }

      this.data = this.provider.input;
    } else {
      this.data = this.sub = undefined;
    }
  }
  sync() {
    var prevData = this.data;
    this.data = this.provider.input;
    if (
      this.data.default !== prevData.default ||
      this.data.defaultChange !== prevData.defaultChange
    ) {
      this.forceUpdate();
      this.update();
    }
  }
}

$ var data = component.data || {};
<${input.renderBody}(data.default, data.defaultChange)/>
