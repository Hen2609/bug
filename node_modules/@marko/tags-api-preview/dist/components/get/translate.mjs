import {
  init_transform,
  replaceAssignments
} from "../../chunk-UOJOZA4O.mjs";
import "../../chunk-YQG3LUWZ.mjs";
import "../../chunk-BCNAFPHP.mjs";
import {
  __commonJS
} from "../../chunk-XYON6ZHC.mjs";

// src/components/get/translate.ts
var require_translate = __commonJS({
  "src/components/get/translate.ts"(exports, module) {
    init_transform();
    module.exports = function translate(tag) {
      const tagVar = tag.get("var");
      const body = tag.get("body");
      const params = [tagVar.node];
      if (tagVar.isIdentifier()) {
        const binding = tag.scope.getBinding(tagVar.node.name);
        const changeId = tag.scope.generateUidIdentifier(`${tagVar.node.name}Change`);
        params.push(changeId);
        replaceAssignments(binding, changeId);
      }
      for (const param of params) {
        body.pushContainer("params", param);
      }
      for (const sibling of tag.getAllNextSiblings()) {
        body.pushContainer("body", sibling.node);
        sibling.remove();
      }
      tag.scope.crawl();
      tag.node.var = null;
    };
  }
});
export default require_translate();
