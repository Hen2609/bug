var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var import_patch_lifecycle = __toESM(require("../../util/patch-lifecycle"));
const metaKey = Symbol();
const indexKey = Symbol();
const lifecycleMethods = {
  onMount: runEffects,
  onUpdate: runEffects,
  onDestroy: runCleanups
};
function runEffects() {
  const meta = this[metaKey];
  if (meta) {
    this[indexKey] = 0;
    for (let i = 0; i < meta.length; i += 3) {
      if (meta[i]) {
        const fn = meta[i + 1];
        meta[i] = 0;
        if (fn) {
          meta[i + 2] = fn();
        }
      }
    }
  }
}
function runCleanups() {
  const meta = this[metaKey];
  if (meta) {
    for (let i = 2; i < meta.length; i += 3) {
      const cleanup = meta[i];
      cleanup && cleanup();
    }
  }
}
module.exports = function(component, fn) {
  const meta = component[metaKey];
  const index = component[indexKey];
  if (meta) {
    if (index === void 0) {
      meta.push(1, fn, 0);
    } else {
      component[indexKey] += 3;
      if (meta[index + 1] !== fn) {
        const cleanup = meta[index + 2];
        meta[index] = 1;
        meta[index + 1] = fn;
        if (cleanup) {
          cleanup();
          meta[index + 2] = 0;
        }
      }
    }
  } else {
    (0, import_patch_lifecycle.default)(component, lifecycleMethods);
    component[metaKey] = [1, fn, 0];
  }
};
