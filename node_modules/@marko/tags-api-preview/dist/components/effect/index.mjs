import {
  require_patch_lifecycle
} from "../../chunk-5WRUZCBU.mjs";
import {
  __commonJS,
  __toESM
} from "../../chunk-XYON6ZHC.mjs";

// src/components/effect/index.ts
var require_effect = __commonJS({
  "src/components/effect/index.ts"(exports, module) {
    var import_patch_lifecycle = __toESM(require_patch_lifecycle());
    var metaKey = Symbol();
    var indexKey = Symbol();
    var lifecycleMethods = {
      onMount: runEffects,
      onUpdate: runEffects,
      onDestroy: runCleanups
    };
    function runEffects() {
      const meta = this[metaKey];
      if (meta) {
        this[indexKey] = 0;
        for (let i = 0; i < meta.length; i += 3) {
          if (meta[i]) {
            const fn = meta[i + 1];
            meta[i] = 0;
            if (fn) {
              meta[i + 2] = fn();
            }
          }
        }
      }
    }
    function runCleanups() {
      const meta = this[metaKey];
      if (meta) {
        for (let i = 2; i < meta.length; i += 3) {
          const cleanup = meta[i];
          cleanup && cleanup();
        }
      }
    }
    module.exports = function(component, fn) {
      const meta = component[metaKey];
      const index = component[indexKey];
      if (meta) {
        if (index === void 0) {
          meta.push(1, fn, 0);
        } else {
          component[indexKey] += 3;
          if (meta[index + 1] !== fn) {
            const cleanup = meta[index + 2];
            meta[index] = 1;
            meta[index + 1] = fn;
            if (cleanup) {
              cleanup();
              meta[index + 2] = 0;
            }
          }
        }
      } else {
        (0, import_patch_lifecycle.default)(component, lifecycleMethods);
        component[metaKey] = [1, fn, 0];
      }
    };
  }
});
export default require_effect();
