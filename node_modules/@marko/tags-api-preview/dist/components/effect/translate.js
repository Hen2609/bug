var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var import_compiler = require("@marko/compiler");
var import_import_runtime = require("../../util/import-runtime");
var import_get_attr = __toESM(require("../../util/get-attr"));
module.exports = function translate(tag) {
  var _a;
  const { file } = tag.hub;
  const defaultAttr = (0, import_get_attr.default)(tag, "default");
  const errorMessage = tag.node.var ? "does not support a tag variable" : !defaultAttr ? "must be initialized with a value" : tag.node.attributes.length > 1 ? "only supports the 'default' attribute" : tag.node.body.body.length ? "does not support body content" : tag.node.body.params.length ? "does not support tag body parameters" : ((_a = tag.node.arguments) == null ? void 0 : _a.length) ? "does not support arguments" : void 0;
  if (errorMessage) {
    throw tag.get("name").buildCodeFrameError(`The <effect> tag ${errorMessage}.`);
  }
  if (file.markoOpts.output === "html") {
    tag.remove();
    return;
  }
  tag.replaceWith(import_compiler.types.expressionStatement(import_compiler.types.callExpression((0, import_import_runtime.importRuntimeDefault)(file, "components/effect", "effect"), [
    file._componentInstanceIdentifier,
    (0, import_get_attr.default)(tag, "default").node.value
  ])));
};
