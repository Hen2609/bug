import {
  require_patch_lifecycle
} from "../../chunk-5WRUZCBU.mjs";
import {
  __commonJS,
  __toESM
} from "../../chunk-XYON6ZHC.mjs";

// src/components/return/index-browser.ts
var require_index_browser = __commonJS({
  "src/components/return/index-browser.ts"(exports, module) {
    var import_patch_lifecycle = __toESM(require_patch_lifecycle());
    var metaKey = Symbol();
    var indexKey = Symbol();
    var lifecycleMethods = {
      onMount: resetIndex,
      onUpdate: resetIndex
    };
    function resetIndex() {
      this[indexKey] = 0;
    }
    function createReturn(component) {
      let curValue;
      return function(newVal, write) {
        if (write) {
          if (curValue && (curValue.default !== newVal.default || curValue.defaultChange !== newVal.defaultChange)) {
            component.forceUpdate();
          }
          return curValue = newVal;
        }
        return curValue;
      };
    }
    module.exports = function getReturn(component) {
      const meta = component[metaKey];
      const index = component[indexKey];
      let val;
      if (meta) {
        if (index === void 0) {
          meta.push(val = createReturn(component));
        } else {
          val = meta[component[indexKey]++];
        }
      } else {
        (0, import_patch_lifecycle.default)(component, lifecycleMethods);
        component[metaKey] = [val = createReturn(component)];
      }
      return val;
    };
  }
});
export default require_index_browser();
