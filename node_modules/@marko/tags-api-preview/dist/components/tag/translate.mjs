import {
  assert_no_assignments_default,
  init_assert_no_assignments
} from "../../chunk-JILDANNE.mjs";
import {
  __commonJS
} from "../../chunk-XYON6ZHC.mjs";

// src/components/tag/translate.ts
import { types as t } from "@marko/compiler";
var require_translate = __commonJS({
  "src/components/tag/translate.ts"(exports, module) {
    init_assert_no_assignments();
    var IDENTIFIERS = /* @__PURE__ */ new WeakMap();
    module.exports = {
      enter(tag) {
        const tagVar = tag.node.var;
        const body = tag.node.body;
        const errorMessage = tag.node.arguments ? "does not support arguments" : tag.node.attributes.length ? "does not support attributes" : !tagVar ? "requires a tag variable" : !t.isIdentifier(tagVar) ? "cannot have a destructured tag variable" : !body.body.length ? "requires body content" : void 0;
        if (errorMessage) {
          throw tag.get("name").buildCodeFrameError(`The <tag> tag ${errorMessage}.`);
        }
        assert_no_assignments_default(tag.get("var"));
        IDENTIFIERS.set(tag, tagVar);
        tag.node.var = null;
      },
      exit(tag) {
        tag.replaceWith(t.functionDeclaration(IDENTIFIERS.get(tag), [t.identifier("out"), ...tag.node.body.params], t.blockStatement(tag.node.body.body)));
      }
    };
  }
});
export default require_translate();
