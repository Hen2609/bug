const extensionsKey = Symbol();
function addMethods(proto, methods) {
  for (const name in methods) {
    proto[name] = callBoth(proto[name], methods[name]);
  }
}
function callBoth(a, b) {
  if (a) {
    return function() {
      a.call(this);
      b.call(this);
    };
  }
  return b;
}
module.exports = function(component, methods) {
  const proto = component.__proto__;
  const extensions = proto[extensionsKey];
  if (extensions) {
    if (!extensions.has(methods)) {
      extensions.add(methods);
      addMethods(proto, methods);
      return true;
    }
  } else {
    proto[extensionsKey] = /* @__PURE__ */ new Set([methods]);
    addMethods(proto, methods);
    return true;
  }
  return false;
};
