var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var transform_exports = {};
__export(transform_exports, {
  default: () => transform_default
});
module.exports = __toCommonJS(transform_exports);
var import_compiler = require("@marko/compiler");
var import_import_runtime = require("../../util/import-runtime");
var transform_default = (file, value) => {
  if (file.markoOpts.optimize || import_compiler.types.isLiteral(value) || import_compiler.types.isBinaryExpression(value) || import_compiler.types.isUnaryExpression(value)) {
    return value;
  }
  return import_compiler.types.callExpression((0, import_import_runtime.importRuntimeDefault)(file, "util/deep-freeze", "freeze"), [value]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
