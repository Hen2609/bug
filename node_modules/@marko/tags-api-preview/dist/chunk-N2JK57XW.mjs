import {
  init_is_api,
  isApi
} from "./chunk-EGIQZ5A4.mjs";
import {
  __esm
} from "./chunk-XYON6ZHC.mjs";

// src/translate/class-api-custom-tag-handlers.ts
import { types as t } from "@marko/compiler";
import { loadFileForTag } from "@marko/babel-utils";
var eventNameReg, class_api_custom_tag_handlers_default;
var init_class_api_custom_tag_handlers = __esm({
  "src/translate/class-api-custom-tag-handlers.ts"() {
    init_is_api();
    eventNameReg = /^on[A-Z]/;
    class_api_custom_tag_handlers_default = {
      MarkoTag(tag) {
        if (isApi(tag, "class"))
          return;
        let childFile;
        for (const attr of tag.get("attributes")) {
          if (attr.isMarkoAttribute() && !attr.node.arguments && eventNameReg.test(attr.node.name)) {
            if (!(childFile || (childFile = loadFileForTag(tag))) || isApi(childFile.path, "tags"))
              return;
            attr.node.arguments = [attr.node.value];
            attr.node.value = t.booleanLiteral(true);
          }
        }
      }
    };
  }
});

export {
  class_api_custom_tag_handlers_default,
  init_class_api_custom_tag_handlers
};
