var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var class_api_custom_tag_handlers_exports = {};
__export(class_api_custom_tag_handlers_exports, {
  default: () => class_api_custom_tag_handlers_default
});
module.exports = __toCommonJS(class_api_custom_tag_handlers_exports);
var import_compiler = require("@marko/compiler");
var import_babel_utils = require("@marko/babel-utils");
var import_is_api = __toESM(require("../util/is-api"));
const eventNameReg = /^on[A-Z]/;
var class_api_custom_tag_handlers_default = {
  MarkoTag(tag) {
    if ((0, import_is_api.default)(tag, "class"))
      return;
    let childFile;
    for (const attr of tag.get("attributes")) {
      if (attr.isMarkoAttribute() && !attr.node.arguments && eventNameReg.test(attr.node.name)) {
        if (!(childFile || (childFile = (0, import_babel_utils.loadFileForTag)(tag))) || (0, import_is_api.default)(childFile.path, "tags"))
          return;
        attr.node.arguments = [attr.node.value];
        attr.node.value = import_compiler.types.booleanLiteral(true);
      }
    }
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
