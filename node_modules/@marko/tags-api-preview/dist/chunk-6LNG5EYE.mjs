import {
  getAttr,
  init_get_attr
} from "./chunk-TOAOXY47.mjs";
import {
  init_is_api,
  isApi
} from "./chunk-EGIQZ5A4.mjs";
import {
  __commonJS
} from "./chunk-XYON6ZHC.mjs";

// src/components/if/transformer.ts
var require_transformer = __commonJS({
  "src/components/if/transformer.ts"(exports, module) {
    init_get_attr();
    init_is_api();
    var seen = /* @__PURE__ */ new WeakSet();
    module.exports = function transform(tag) {
      var _a;
      if (isApi(tag, "class") || seen.has(tag))
        return;
      seen.add(tag);
      const defaultAttr = getAttr(tag, "default");
      const errorMessage = tag.node.var ? "does not support a tag variable" : ((_a = tag.node.arguments) == null ? void 0 : _a.length) ? "does not support arguments, the tags api uses '<if=condition>' instead" : !defaultAttr ? "must be given a value" : tag.node.attributes.length > 1 ? "only supports the 'default' attribute" : !tag.node.body.body.length ? "requires body content" : tag.node.body.params.length ? "does not support tag body parameters" : void 0;
      if (errorMessage) {
        throw tag.get("name").buildCodeFrameError(`The <${tag.node.name.value}> tag ${errorMessage}.`);
      }
      tag.node.arguments = [defaultAttr.node.value];
      tag.node.attributes = [];
    };
  }
});

export {
  require_transformer
};
