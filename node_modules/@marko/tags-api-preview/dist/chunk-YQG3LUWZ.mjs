import {
  importRuntimeDefault,
  init_import_runtime
} from "./chunk-BCNAFPHP.mjs";
import {
  __esm
} from "./chunk-XYON6ZHC.mjs";

// src/util/deep-freeze/transform.ts
import { types as t } from "@marko/compiler";
var transform_default;
var init_transform = __esm({
  "src/util/deep-freeze/transform.ts"() {
    init_import_runtime();
    transform_default = (file, value) => {
      if (file.markoOpts.optimize || t.isLiteral(value) || t.isBinaryExpression(value) || t.isUnaryExpression(value)) {
        return value;
      }
      return t.callExpression(importRuntimeDefault(file, "util/deep-freeze", "freeze"), [value]);
    };
  }
});

export {
  transform_default,
  init_transform
};
