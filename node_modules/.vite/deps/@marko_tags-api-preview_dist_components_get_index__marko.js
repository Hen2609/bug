import {
  require_vdom
} from "./chunk-HSNFP6IY.js";
import "./chunk-KOHG6577.js";
import "./chunk-DOCKNWKO.js";
import "./chunk-ZYLZHFSQ.js";
import {
  require_renderer
} from "./chunk-NLDMW4N4.js";
import {
  require_index_browser
} from "./chunk-DOJGUN4M.js";
import "./chunk-XSOBGFXV.js";
import {
  require_defineComponent
} from "./chunk-3MO5ZOMD.js";
import "./chunk-ZYO5YLG3.js";
import "./chunk-O2ZL6YJ2.js";
import "./chunk-DNVSKMP5.js";
import "./chunk-XFSNMVI3.js";
import "./chunk-FBABJUQR.js";
import "./chunk-BYPQ4JD2.js";
import "./chunk-3UWSHLBX.js";
import {
  require_dynamic_tag
} from "./chunk-YART4OGT.js";
import "./chunk-3EZRPHIR.js";
import "./chunk-CLI2JG2L.js";
import "./chunk-EOID6AGX.js";
import "./chunk-H4Y2AQYP.js";
import "./chunk-BXPA54VP.js";
import "./chunk-7ZAMFXOE.js";
import "./chunk-FDEQ5SZB.js";
import "./chunk-GSFJVMIM.js";
import {
  __toESM
} from "./chunk-TWLJ45QX.js";

// node_modules/@marko/tags-api-preview/dist/components/get/index.marko
var import_vdom = __toESM(require_vdom());
var import_dynamic_tag = __toESM(require_dynamic_tag());
var import_renderer = __toESM(require_renderer());
var import_registry = __toESM(require_index_browser());
var import_defineComponent = __toESM(require_defineComponent());
var _marko_componentType = "node_modules/@marko/tags-api-preview/dist/components/get/index.marko";
var _marko_template = (0, import_vdom.t)(_marko_componentType);
var get_default = _marko_template;
var CONTEXT_KEY = "__subtree_context__";
function getProvider(out, provider) {
  return out[CONTEXT_KEY] && out[CONTEXT_KEY][provider.___providerId];
}
(0, import_registry.r)(_marko_componentType, () => _marko_template);
var _marko_component = {
  onCreate() {
    this.sync = this.sync.bind(this);
  },
  onInput(input, out) {
    var from = input.default;
    if (!from || !from.render) {
      throw new Error("Invalid component constructor provided as <get> 'default' attribute. Got: " + from);
    }
    var prevProvider = this.provider;
    this.provider = getProvider(out, from);
    if (prevProvider && prevProvider !== this.provider) {
      this.sub.removeAllListeners();
    }
    if (this.provider) {
      if (typeof window === "object") {
        this.sub = this.subscribeTo(this.provider).on("___changed", this.sync);
      }
      this.data = this.provider.input;
    } else {
      this.data = this.sub = void 0;
    }
  },
  sync() {
    var prevData = this.data;
    this.data = this.provider.input;
    if (this.data.default !== prevData.default || this.data.defaultChange !== prevData.defaultChange) {
      this.forceUpdate();
      this.update();
    }
  }
};
_marko_template._ = (0, import_renderer.default)(function(input, out, _componentDef, _component, state) {
  var data = _component.data || {};
  (0, import_dynamic_tag.default)(out, input.renderBody, null, null, [data.default, data.defaultChange], null, _componentDef, "0");
}, {
  t: _marko_componentType,
  d: true
}, _marko_component);
_marko_template.Component = (0, import_defineComponent.default)(_marko_component, _marko_template._);
export {
  get_default as default
};
//# sourceMappingURL=@marko_tags-api-preview_dist_components_get_index__marko.js.map
