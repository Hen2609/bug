{
  "version": 3,
  "sources": ["../../marko/src/core-tags/components/init-components-tag.js"],
  "sourcesContent": ["\"use strict\";\n\nconst INIT_COMPONENTS_KEY = Symbol();\n\nconst addComponentsFromContext =\n  require(\"../../runtime/components\").___addComponentsFromContext;\nconst getInitComponentsCode =\n  require(\"../../runtime/components\").___getInitComponentsCode;\n\nfunction addComponentsFromOut(source, target) {\n  const sourceOut = source.out || source;\n  const targetOut = target || sourceOut;\n  const componentsContext = sourceOut.___components;\n  const componentDefs = targetOut.writer.get(\"componentDefs\");\n  addComponentsFromContext(componentsContext, componentDefs);\n}\n\nfunction addInitScript(writer) {\n  const out = writer.state.root;\n  const componentDefs = writer.get(\"componentDefs\");\n  writer.script(getInitComponentsCode(out, componentDefs));\n}\n\nmodule.exports = function render(input, out) {\n  const $global = out.global;\n  if ($global[INIT_COMPONENTS_KEY] === undefined) {\n    $global[INIT_COMPONENTS_KEY] = true;\n\n    out.on(\"await:finish\", addComponentsFromOut);\n    out.on(\"___toString\", addInitScript);\n\n    if (out.isSync() === true) {\n      // Generate initialization code for any of the UI components that were\n      // rendered synchronously\n      addComponentsFromOut(out);\n    } else {\n      // Generate initialization code for any of the UI components that were\n      // rendered asynchronously, but were outside an `<await>` tag\n      // (each `<await>` tag will have its own component initialization block)\n      const asyncOut = out.beginAsync({ last: true, timeout: -1 });\n      out.onLast(function (next) {\n        // Ensure we're getting init code starting from the root\n        let rootOut = out;\n        while (rootOut._parentOut) {\n          rootOut = rootOut._parentOut;\n        }\n        // Write out all of the component init code from the main out\n        addComponentsFromOut(rootOut, asyncOut);\n        asyncOut.end();\n        next();\n      });\n    }\n  }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAEA,QAAM,sBAAsB,OAAO;AAEnC,QAAM,2BACJ,qBAAoC;AACtC,QAAM,wBACJ,qBAAoC;AAEtC,aAAS,qBAAqB,QAAQ,QAAQ;AAC5C,YAAM,YAAY,OAAO,OAAO;AAChC,YAAM,YAAY,UAAU;AAC5B,YAAM,oBAAoB,UAAU;AACpC,YAAM,gBAAgB,UAAU,OAAO,IAAI,eAAe;AAC1D,+BAAyB,mBAAmB,aAAa;AAAA,IAC3D;AAEA,aAAS,cAAc,QAAQ;AAC7B,YAAM,MAAM,OAAO,MAAM;AACzB,YAAM,gBAAgB,OAAO,IAAI,eAAe;AAChD,aAAO,OAAO,sBAAsB,KAAK,aAAa,CAAC;AAAA,IACzD;AAEA,WAAO,UAAU,SAAS,OAAO,OAAO,KAAK;AAC3C,YAAM,UAAU,IAAI;AACpB,UAAI,QAAQ,yBAAyB,QAAW;AAC9C,gBAAQ,uBAAuB;AAE/B,YAAI,GAAG,gBAAgB,oBAAoB;AAC3C,YAAI,GAAG,eAAe,aAAa;AAEnC,YAAI,IAAI,OAAO,MAAM,MAAM;AAGzB,+BAAqB,GAAG;AAAA,QAC1B,OAAO;AAIL,gBAAM,WAAW,IAAI,WAAW,EAAE,MAAM,MAAM,SAAS,GAAG,CAAC;AAC3D,cAAI,OAAO,SAAU,MAAM;AAEzB,gBAAI,UAAU;AACd,mBAAO,QAAQ,YAAY;AACzB,wBAAU,QAAQ;AAAA,YACpB;AAEA,iCAAqB,SAAS,QAAQ;AACtC,qBAAS,IAAI;AACb,iBAAK;AAAA,UACP,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
