{
  "version": 3,
  "sources": ["../../marko/src/runtime/html/StringWriter.js", "../../marko/src/runtime/html/BufferedWriter.js"],
  "sourcesContent": ["\"use strict\";\n\nvar escapeDoubleQuotes =\n  require(\"./helpers/escape-quotes\").___escapeDoubleQuotes;\n\nfunction StringWriter() {\n  this._content = \"\";\n  this._scripts = \"\";\n  this._data = null;\n}\n\nStringWriter.prototype = {\n  write: function (str) {\n    this._content += str;\n  },\n\n  script: function (str) {\n    if (str) {\n      this._scripts += (this._scripts ? \";\" : \"\") + str;\n    }\n  },\n\n  get: function (key) {\n    const extra = (this._data = this._data || {});\n    return (extra[key] = extra[key] || []);\n  },\n\n  merge: function (otherWriter) {\n    this._content += otherWriter._content;\n    this._scripts += otherWriter._scripts;\n    if (otherWriter._data) {\n      if (this._data) {\n        for (const key in otherWriter._data) {\n          if (this._data[key]) {\n            this._data[key].push.apply(this._data[key], otherWriter._data[key]);\n          } else {\n            this._data[key] = this._writer[key];\n          }\n        }\n      } else {\n        this._data = otherWriter._data;\n      }\n    }\n  },\n\n  clear: function () {\n    this._content = \"\";\n    this._scripts = \"\";\n    this._data = null;\n  },\n\n  toString: function () {\n    this.state.events.emit(\"___toString\", this);\n    let str = this._content;\n    if (this._scripts) {\n      const outGlobal = this.state.root.global;\n      const cspNonce = outGlobal.cspNonce;\n      const nonceAttr = cspNonce\n        ? ' nonce=\"' + escapeDoubleQuotes(cspNonce) + '\"'\n        : \"\";\n      str += `<script${nonceAttr}>${this._scripts}</script>`;\n    }\n    return str;\n  }\n};\n\nmodule.exports = StringWriter;\n", "\"use strict\";\n\nconst immediate = require(\"../setImmediate\");\nconst setImmediate = immediate.___setImmediate;\nconst clearImmediate = immediate.___clearImmediate;\nconst StringWriter = require(\"./StringWriter\");\n\n/**\n * Simple wrapper that can be used to wrap a stream\n * to reduce the number of write calls. In Node.js world,\n * each stream.write() becomes a chunk. We can avoid overhead\n * by reducing the number of chunks by buffering the output.\n */\nfunction BufferedWriter(wrappedStream) {\n  StringWriter.call(this);\n  this._wrapped = wrappedStream;\n  this._scheduled = null;\n}\n\nBufferedWriter.prototype = Object.assign(\n  {\n    scheduleFlush() {\n      if (!this._scheduled) {\n        this._scheduled = setImmediate(flush.bind(0, this));\n      }\n    },\n\n    end: function () {\n      flush(this);\n      if (!this._wrapped.isTTY) {\n        this._wrapped.end();\n      }\n    }\n  },\n  StringWriter.prototype\n);\n\nfunction flush(writer) {\n  const contents = writer.toString();\n  if (contents.length !== 0) {\n    writer._wrapped.write(contents);\n    writer.clear();\n    if (writer._wrapped.flush) {\n      writer._wrapped.flush();\n    }\n  }\n\n  clearImmediate(writer._scheduled);\n  writer._scheduled = null;\n}\n\nmodule.exports = BufferedWriter;\n"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,QAAI,qBACF,wBAAmC;AAErC,aAAS,eAAe;AACtB,WAAK,WAAW;AAChB,WAAK,WAAW;AAChB,WAAK,QAAQ;AAAA,IACf;AAEA,iBAAa,YAAY;AAAA,MACvB,OAAO,SAAU,KAAK;AACpB,aAAK,YAAY;AAAA,MACnB;AAAA,MAEA,QAAQ,SAAU,KAAK;AACrB,YAAI,KAAK;AACP,eAAK,aAAa,KAAK,WAAW,MAAM,MAAM;AAAA,QAChD;AAAA,MACF;AAAA,MAEA,KAAK,SAAU,KAAK;AAClB,cAAM,QAAS,KAAK,QAAQ,KAAK,SAAS,CAAC;AAC3C,eAAQ,MAAM,OAAO,MAAM,QAAQ,CAAC;AAAA,MACtC;AAAA,MAEA,OAAO,SAAU,aAAa;AAC5B,aAAK,YAAY,YAAY;AAC7B,aAAK,YAAY,YAAY;AAC7B,YAAI,YAAY,OAAO;AACrB,cAAI,KAAK,OAAO;AACd,uBAAW,OAAO,YAAY,OAAO;AACnC,kBAAI,KAAK,MAAM,MAAM;AACnB,qBAAK,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,MAAM,YAAY,MAAM,IAAI;AAAA,cACpE,OAAO;AACL,qBAAK,MAAM,OAAO,KAAK,QAAQ;AAAA,cACjC;AAAA,YACF;AAAA,UACF,OAAO;AACL,iBAAK,QAAQ,YAAY;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AAAA,MAEA,OAAO,WAAY;AACjB,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,QAAQ;AAAA,MACf;AAAA,MAEA,UAAU,WAAY;AACpB,aAAK,MAAM,OAAO,KAAK,eAAe,IAAI;AAC1C,YAAI,MAAM,KAAK;AACf,YAAI,KAAK,UAAU;AACjB,gBAAM,YAAY,KAAK,MAAM,KAAK;AAClC,gBAAM,WAAW,UAAU;AAC3B,gBAAM,YAAY,WACd,aAAa,mBAAmB,QAAQ,IAAI,MAC5C;AACJ,iBAAO,UAAU,aAAa,KAAK;AAAA,QACrC;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClEjB;AAAA;AAAA;AAEA,QAAM,YAAY;AAClB,QAAM,eAAe,UAAU;AAC/B,QAAM,iBAAiB,UAAU;AACjC,QAAM,eAAe;AAQrB,aAAS,eAAe,eAAe;AACrC,mBAAa,KAAK,IAAI;AACtB,WAAK,WAAW;AAChB,WAAK,aAAa;AAAA,IACpB;AAEA,mBAAe,YAAY,OAAO;AAAA,MAChC;AAAA,QACE,gBAAgB;AACd,cAAI,CAAC,KAAK,YAAY;AACpB,iBAAK,aAAa,aAAa,MAAM,KAAK,GAAG,IAAI,CAAC;AAAA,UACpD;AAAA,QACF;AAAA,QAEA,KAAK,WAAY;AACf,gBAAM,IAAI;AACV,cAAI,CAAC,KAAK,SAAS,OAAO;AACxB,iBAAK,SAAS,IAAI;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAAA,MACA,aAAa;AAAA,IACf;AAEA,aAAS,MAAM,QAAQ;AACrB,YAAM,WAAW,OAAO,SAAS;AACjC,UAAI,SAAS,WAAW,GAAG;AACzB,eAAO,SAAS,MAAM,QAAQ;AAC9B,eAAO,MAAM;AACb,YAAI,OAAO,SAAS,OAAO;AACzB,iBAAO,SAAS,MAAM;AAAA,QACxB;AAAA,MACF;AAEA,qBAAe,OAAO,UAAU;AAChC,aAAO,aAAa;AAAA,IACtB;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
