{
  "version": 3,
  "sources": ["../../marko/src/runtime/renderable.js"],
  "sourcesContent": ["var defaultCreateOut = require(\"./createOut\");\nvar setImmediate = require(\"./setImmediate\").___setImmediate;\nvar extend = require(\"raptor-util/extend\");\n\nfunction safeRender(renderFunc, finalData, finalOut, shouldEnd) {\n  try {\n    renderFunc(finalData, finalOut);\n\n    if (shouldEnd) {\n      finalOut.end();\n    }\n  } catch (err) {\n    var actualEnd = finalOut.end;\n    finalOut.end = function () {};\n\n    setImmediate(function () {\n      finalOut.end = actualEnd;\n      finalOut.error(err);\n    });\n  }\n  return finalOut;\n}\n\nmodule.exports = function (target, renderer) {\n  var renderFunc =\n    renderer && (renderer.renderer || renderer.render || renderer);\n  var createOut = target.createOut || renderer.createOut || defaultCreateOut;\n\n  return extend(target, {\n    createOut: createOut,\n\n    renderToString: function (data, callback) {\n      var localData = data || {};\n      var render = renderFunc || this._;\n      var globalData = localData.$global;\n      var out = createOut(globalData);\n\n      out.global.template = this;\n\n      if (globalData) {\n        localData.$global = undefined;\n      }\n\n      if (callback) {\n        out\n          .on(\"finish\", function () {\n            callback(null, out.toString(), out);\n          })\n          .once(\"error\", callback);\n\n        return safeRender(render, localData, out, true);\n      } else {\n        out.sync();\n        render(localData, out);\n        return out.toString();\n      }\n    },\n\n    renderSync: function (data) {\n      var localData = data || {};\n      var render = renderFunc || this._;\n      var globalData = localData.$global;\n      var out = createOut(globalData);\n      out.sync();\n\n      out.global.template = this;\n\n      if (globalData) {\n        localData.$global = undefined;\n      }\n\n      render(localData, out);\n      return out.___getResult();\n    },\n\n    /**\n     * Renders a template to either a stream (if the last\n     * argument is a Stream instance) or\n     * provides the output to a callback function (if the last\n     * argument is a Function).\n     *\n     * Supported signatures:\n     *\n     * render(data)\n     * render(data, out)\n     * render(data, stream)\n     * render(data, callback)\n     *\n     * @param  {Object} data The view model data for the template\n     * @param  {AsyncStream/AsyncVDOMBuilder} out A Stream, an AsyncStream/AsyncVDOMBuilder instance, or a callback function\n     * @return {AsyncStream/AsyncVDOMBuilder} Returns the AsyncStream/AsyncVDOMBuilder instance that the template is rendered to\n     */\n    render: function (data, out) {\n      var callback;\n      var finalOut;\n      var finalData;\n      var globalData;\n      var render = renderFunc || this._;\n      var shouldBuffer = this.___shouldBuffer;\n      var shouldEnd = true;\n\n      if (data) {\n        finalData = data;\n        if ((globalData = data.$global)) {\n          finalData.$global = undefined;\n        }\n      } else {\n        finalData = {};\n      }\n\n      if (out && out.___isOut) {\n        finalOut = out;\n        shouldEnd = false;\n        extend(out.global, globalData);\n      } else if (typeof out == \"function\") {\n        finalOut = createOut(globalData);\n        callback = out;\n      } else {\n        finalOut = createOut(\n          globalData, // global\n          out, // writer(AsyncStream) or parentNode(AsyncVDOMBuilder)\n          undefined, // parentOut\n          shouldBuffer // ignored by AsyncVDOMBuilder\n        );\n      }\n\n      if (callback) {\n        finalOut\n          .on(\"finish\", function () {\n            callback(null, finalOut.___getResult());\n          })\n          .once(\"error\", callback);\n      }\n\n      globalData = finalOut.global;\n\n      globalData.template = globalData.template || this;\n\n      return safeRender(render, finalData, finalOut, shouldEnd);\n    }\n  });\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,mBAAmB;AACvB,QAAI,eAAe,wBAA0B;AAC7C,QAAI,SAAS;AAEb,aAAS,WAAW,YAAY,WAAW,UAAU,WAAW;AAC9D,UAAI;AACF,mBAAW,WAAW,QAAQ;AAE9B,YAAI,WAAW;AACb,mBAAS,IAAI;AAAA,QACf;AAAA,MACF,SAAS,KAAP;AACA,YAAI,YAAY,SAAS;AACzB,iBAAS,MAAM,WAAY;AAAA,QAAC;AAE5B,qBAAa,WAAY;AACvB,mBAAS,MAAM;AACf,mBAAS,MAAM,GAAG;AAAA,QACpB,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU,SAAU,QAAQ,UAAU;AAC3C,UAAI,aACF,aAAa,SAAS,YAAY,SAAS,UAAU;AACvD,UAAI,YAAY,OAAO,aAAa,SAAS,aAAa;AAE1D,aAAO,OAAO,QAAQ;AAAA,QACpB;AAAA,QAEA,gBAAgB,SAAU,MAAM,UAAU;AACxC,cAAI,YAAY,QAAQ,CAAC;AACzB,cAAI,SAAS,cAAc,KAAK;AAChC,cAAI,aAAa,UAAU;AAC3B,cAAI,MAAM,UAAU,UAAU;AAE9B,cAAI,OAAO,WAAW;AAEtB,cAAI,YAAY;AACd,sBAAU,UAAU;AAAA,UACtB;AAEA,cAAI,UAAU;AACZ,gBACG,GAAG,UAAU,WAAY;AACxB,uBAAS,MAAM,IAAI,SAAS,GAAG,GAAG;AAAA,YACpC,CAAC,EACA,KAAK,SAAS,QAAQ;AAEzB,mBAAO,WAAW,QAAQ,WAAW,KAAK,IAAI;AAAA,UAChD,OAAO;AACL,gBAAI,KAAK;AACT,mBAAO,WAAW,GAAG;AACrB,mBAAO,IAAI,SAAS;AAAA,UACtB;AAAA,QACF;AAAA,QAEA,YAAY,SAAU,MAAM;AAC1B,cAAI,YAAY,QAAQ,CAAC;AACzB,cAAI,SAAS,cAAc,KAAK;AAChC,cAAI,aAAa,UAAU;AAC3B,cAAI,MAAM,UAAU,UAAU;AAC9B,cAAI,KAAK;AAET,cAAI,OAAO,WAAW;AAEtB,cAAI,YAAY;AACd,sBAAU,UAAU;AAAA,UACtB;AAEA,iBAAO,WAAW,GAAG;AACrB,iBAAO,IAAI,aAAa;AAAA,QAC1B;AAAA,QAmBA,QAAQ,SAAU,MAAM,KAAK;AAC3B,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI,SAAS,cAAc,KAAK;AAChC,cAAI,eAAe,KAAK;AACxB,cAAI,YAAY;AAEhB,cAAI,MAAM;AACR,wBAAY;AACZ,gBAAK,aAAa,KAAK,SAAU;AAC/B,wBAAU,UAAU;AAAA,YACtB;AAAA,UACF,OAAO;AACL,wBAAY,CAAC;AAAA,UACf;AAEA,cAAI,OAAO,IAAI,UAAU;AACvB,uBAAW;AACX,wBAAY;AACZ,mBAAO,IAAI,QAAQ,UAAU;AAAA,UAC/B,WAAW,OAAO,OAAO,YAAY;AACnC,uBAAW,UAAU,UAAU;AAC/B,uBAAW;AAAA,UACb,OAAO;AACL,uBAAW;AAAA,cACT;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAEA,cAAI,UAAU;AACZ,qBACG,GAAG,UAAU,WAAY;AACxB,uBAAS,MAAM,SAAS,aAAa,CAAC;AAAA,YACxC,CAAC,EACA,KAAK,SAAS,QAAQ;AAAA,UAC3B;AAEA,uBAAa,SAAS;AAEtB,qBAAW,WAAW,WAAW,YAAY;AAE7C,iBAAO,WAAW,QAAQ,WAAW,UAAU,SAAS;AAAA,QAC1D;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;",
  "names": []
}
