import {
  require_components
} from "./chunk-NPFALZ6B.js";
import "./chunk-DOJGUN4M.js";
import "./chunk-XSOBGFXV.js";
import "./chunk-3MO5ZOMD.js";
import "./chunk-ZYO5YLG3.js";
import "./chunk-O2ZL6YJ2.js";
import "./chunk-DNVSKMP5.js";
import "./chunk-XFSNMVI3.js";
import "./chunk-FBABJUQR.js";
import "./chunk-BYPQ4JD2.js";
import "./chunk-CLI2JG2L.js";
import "./chunk-EOID6AGX.js";
import "./chunk-H4Y2AQYP.js";
import "./chunk-BXPA54VP.js";
import "./chunk-7ZAMFXOE.js";
import "./chunk-FDEQ5SZB.js";
import "./chunk-GSFJVMIM.js";
import {
  __commonJS
} from "./chunk-TWLJ45QX.js";

// node_modules/marko/src/core-tags/components/init-components-tag.js
var require_init_components_tag = __commonJS({
  "node_modules/marko/src/core-tags/components/init-components-tag.js"(exports, module) {
    var INIT_COMPONENTS_KEY = Symbol();
    var addComponentsFromContext = require_components().___addComponentsFromContext;
    var getInitComponentsCode = require_components().___getInitComponentsCode;
    function addComponentsFromOut(source, target) {
      const sourceOut = source.out || source;
      const targetOut = target || sourceOut;
      const componentsContext = sourceOut.___components;
      const componentDefs = targetOut.writer.get("componentDefs");
      addComponentsFromContext(componentsContext, componentDefs);
    }
    function addInitScript(writer) {
      const out = writer.state.root;
      const componentDefs = writer.get("componentDefs");
      writer.script(getInitComponentsCode(out, componentDefs));
    }
    module.exports = function render(input, out) {
      const $global = out.global;
      if ($global[INIT_COMPONENTS_KEY] === void 0) {
        $global[INIT_COMPONENTS_KEY] = true;
        out.on("await:finish", addComponentsFromOut);
        out.on("___toString", addInitScript);
        if (out.isSync() === true) {
          addComponentsFromOut(out);
        } else {
          const asyncOut = out.beginAsync({ last: true, timeout: -1 });
          out.onLast(function(next) {
            let rootOut = out;
            while (rootOut._parentOut) {
              rootOut = rootOut._parentOut;
            }
            addComponentsFromOut(rootOut, asyncOut);
            asyncOut.end();
            next();
          });
        }
      }
    };
  }
});
export default require_init_components_tag();
//# sourceMappingURL=marko_src_core-tags_components_init-components-tag__js.js.map
