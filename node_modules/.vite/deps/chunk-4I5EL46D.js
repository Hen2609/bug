import {
  require_escape_quotes
} from "./chunk-B57242OF.js";
import {
  require_index_browser
} from "./chunk-FBABJUQR.js";
import {
  __commonJS
} from "./chunk-TWLJ45QX.js";

// node_modules/marko/src/runtime/html/StringWriter.js
var require_StringWriter = __commonJS({
  "node_modules/marko/src/runtime/html/StringWriter.js"(exports, module) {
    "use strict";
    var escapeDoubleQuotes = require_escape_quotes().___escapeDoubleQuotes;
    function StringWriter() {
      this._content = "";
      this._scripts = "";
      this._data = null;
    }
    StringWriter.prototype = {
      write: function(str) {
        this._content += str;
      },
      script: function(str) {
        if (str) {
          this._scripts += (this._scripts ? ";" : "") + str;
        }
      },
      get: function(key) {
        const extra = this._data = this._data || {};
        return extra[key] = extra[key] || [];
      },
      merge: function(otherWriter) {
        this._content += otherWriter._content;
        this._scripts += otherWriter._scripts;
        if (otherWriter._data) {
          if (this._data) {
            for (const key in otherWriter._data) {
              if (this._data[key]) {
                this._data[key].push.apply(this._data[key], otherWriter._data[key]);
              } else {
                this._data[key] = this._writer[key];
              }
            }
          } else {
            this._data = otherWriter._data;
          }
        }
      },
      clear: function() {
        this._content = "";
        this._scripts = "";
        this._data = null;
      },
      toString: function() {
        this.state.events.emit("___toString", this);
        let str = this._content;
        if (this._scripts) {
          const outGlobal = this.state.root.global;
          const cspNonce = outGlobal.cspNonce;
          const nonceAttr = cspNonce ? ' nonce="' + escapeDoubleQuotes(cspNonce) + '"' : "";
          str += `<script${nonceAttr}>${this._scripts}<\/script>`;
        }
        return str;
      }
    };
    module.exports = StringWriter;
  }
});

// node_modules/marko/src/runtime/html/BufferedWriter.js
var require_BufferedWriter = __commonJS({
  "node_modules/marko/src/runtime/html/BufferedWriter.js"(exports, module) {
    "use strict";
    var immediate = require_index_browser();
    var setImmediate = immediate.___setImmediate;
    var clearImmediate = immediate.___clearImmediate;
    var StringWriter = require_StringWriter();
    function BufferedWriter(wrappedStream) {
      StringWriter.call(this);
      this._wrapped = wrappedStream;
      this._scheduled = null;
    }
    BufferedWriter.prototype = Object.assign(
      {
        scheduleFlush() {
          if (!this._scheduled) {
            this._scheduled = setImmediate(flush.bind(0, this));
          }
        },
        end: function() {
          flush(this);
          if (!this._wrapped.isTTY) {
            this._wrapped.end();
          }
        }
      },
      StringWriter.prototype
    );
    function flush(writer) {
      const contents = writer.toString();
      if (contents.length !== 0) {
        writer._wrapped.write(contents);
        writer.clear();
        if (writer._wrapped.flush) {
          writer._wrapped.flush();
        }
      }
      clearImmediate(writer._scheduled);
      writer._scheduled = null;
    }
    module.exports = BufferedWriter;
  }
});

export {
  require_StringWriter,
  require_BufferedWriter
};
//# sourceMappingURL=chunk-4I5EL46D.js.map
